1. Create the Customer table with the following columns.
CustomerId Number(5)
Cust_Name varchar2(20)
Address1 Varchar2(30)
Address2 Varchar2(30)

Ans: create table customer(customerid number(5), cust_name varchar2(20),address1 varchar2(30),address2 varchar2(30));

Table created.

2. Modify the Customer table Cust_Name column of datatype with Varchar2(30), rename the
column to CustomerName and it should not accept Nulls.

Ans:  alter table customer rename column cust_name to customername;

Table altered.

     alter table customer modify(customername not null);

Table altered.

3. a) Add the following Columns to the Customer table.
Gender Varchar2(1)
Age Number(3)
PhoneNo Number(10)
b) Rename the Customer table to Cust_Table

Ans: (a) alter table customer add gender varchar2(1);

Table altered.
  alter table customer add age number(3);

Table altered.

SQL> alter table customer add phoneno number(10);

Table altered.
    
     (b)  alter table customer rename to cust_table;

Table altered.

4. Insert rows with the following data in to the Customer table.
   Insert into customer values: (1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25,
7878776’)
In similar manner, add the below records to the Customer table:
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

Ans:   insert into cust_table values(1000,'allen','#115 chicago','#115 chicago','M',25,7878776);

1 row created.

SQL> insert into cust_table values(1001,'george','#116 france','#116 france','M',25,434524);

1 row created.

SQL> insert into cust_table values(1002,'becker','#114 newyork','#114 newyork','M',45,431525);

1 row created.

 select * from cust_table;

CUSTOMERID CUSTOMERNAME         ADDRESS1
---------- -------------------- ------------------------------
ADDRESS2                       G        AGE    PHONENO
------------------------------ - ---------- ----------
      1000 allen                #115 chicago
#115 chicago                   M         25    7878776

      1001 george               #116 france
#116 france                    M         25     434524

      1002 becker               #114 newyork
#114 newyork                   M         45     431525

5. Add the Primary key constraint for Customerld with the name Custld_Prim.

Ans:  alter table cust_table add constraint custid_prim primary key(customerid);

Table altered.

6. Insert the row given below in the Customer table and see the message generated by the
Oracle server.
1002, John, #114 Chicago, #114 Chicago, M, 45, 439525

Ans:   insert into cust_table values(1002,'john','#114 chicago','#114 chicago','M',45,439525);
insert into cust_table values(1002,'john','#114 chicago','#114 chicago','M',45,439525)
*
ERROR at line 1:
ORA-00001: unique constraint (SRINIVASS.CUSTID_PRIM) violated

7. Disable the constraint on CustomerId, and insert the following data:
1002, Becker, #114 New York, #114 New york , M, 45, 431525
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525

Ans:   alter table cust_table drop constraint custid_prim;

Table altered.

SQL> insert into cust_table values(1002,'becker','#114 newyork','#114 newyork','M',45,431525);

1 row created.

SQL> insert into cust_table values(1003,'nanapatekar','#115 india','#115 india','M',45,431525);

1 row created.

8. Enable the constraint on CustomerId of the Customer table, and see the message
generated by the Oracle server. 

Ans:  alter table cust_table add constraint custid_prim primary key(customerid);
alter table cust_table add constraint custid_prim primary key(customerid)
                                      *
ERROR at line 1:
ORA-02437: cannot validate (SRINIVASS.CUSTID_PRIM) - primary key violated

9. Drop the constraint Custld_Prim on CustomerId and insert the following Data. Alter
Customer table, drop constraint Custid_Prim.
1002, Becker, #114 New York, #114 New york , M, 45, 431525, 15000.50
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525, 20000.50

Ans:  insert into cust_table values(1002,'becker','#114 newyork','#114 newyork','M',45,431525,50000.50);
insert into cust_table values(1002,'becker','#114 newyork','#114 newyork','M',45,431525,50000.50)
            *
ERROR at line 1:
ORA-00913: too many values


SQL> insert into cust_table values(1003,'nanapatekar','#115 india','#115 india','M',45,431525,20000.50);
insert into cust_table values(1003,'nanapatekar','#115 india','#115 india','M',45,431525,20000.50)
            *
ERROR at line 1:
ORA-00913: too many values

10. Delete all the existing rows from Customer table, and let the structure remain itself using
TRUNCATE statement.

Ans:   truncate table cust_table;

Table truncated.

11. In the Customer table, add a column E_mail. 

Ans:   alter table cust_table add email varchar2(20);

Table altered.

12. Drop the E_mail column from Customer table. 

Ans:  alter table cust_table drop column email;

Table altered.

 desc cust_table;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 CUSTOMERNAME                              NOT NULL VARCHAR2(20)
 ADDRESS1                                           VARCHAR2(30)
 ADDRESS2                                           VARCHAR2(30)
 GENDER                                             VARCHAR2(1)
 AGE                                                NUMBER(3)
 PHONENO                                            NUMBER(10)

13. Create the Suppliers table based on the structure of the Customer table. Include only the
CustomerId, CustomerName, Address1, Address2, and phoneno columns.
Name the columns in the new table as SuppID, SName, Addr1, Addr2, and Contactno
respectively.

Ans:   create table suppliers(customerid number(5),customername varchar2(20),address1 varchar2(30),address2 varchar2(30),phoneno number(10));

Table created.
       alter table suppliers rename column customerid to suppid;

Table altered.

SQL> alter table suppliers rename column customername to sname;

Table altered.

SQL> alter table suppliers rename column address1 to addr1;

Table altered.

SQL> alter table suppliers rename column address2 to addr2;

Table altered.

SQL> alter table suppliers rename column phoneno to contactno;

Table altered.

SQL> desc suppliers;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 SUPPID                                             NUMBER(5)
 SNAME                                              VARCHAR2(20)
 ADDR1                                              VARCHAR2(30)
 ADDR2                                              VARCHAR2(30)
 CONTACTNO                                          NUMBER(10)

14. Drop the above table and recreate the following table with the name CustomerMaster.
CustomerId Number(5) Primary key(Name of constraint is CustId_PK)
CustomerName Varchar2(30) Not Null
Addressl Varchar2(30) Not Null
Address2 Varchar2(30)
Gender Varchar2(l)
Age Number(3)
PhoneNo Number(10)

Ans:  drop table suppliers;

Table dropped.

SQL> create table customermaster(customerid number(5),customername varchar2(30) not null,address1 varchar2(30) not null,address2 varchar2(30),gender varchar2(1),age number(3),phoneno number(10),constraint custid_pk primary key(customerid));

Table created.

SQL> desc customermaster;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                NOT NULL NUMBER(5)
 CUSTOMERNAME                              NOT NULL VARCHAR2(30)
 ADDRESS1                                  NOT NULL VARCHAR2(30)
 ADDRESS2                                           VARCHAR2(30)
 GENDER                                             VARCHAR2(1)
 AGE                                                NUMBER(3)
 PHONENO                                            NUMBER(10)

15. Create the AccountsMaster table with the following Columns. Use sequence to generate
Account number
Customerld Number(5)
AccountNumber Number(10,2) Primary key(Name of constraint is Acc_PK)
AccountType Char(3)
LedgerBalance Number(10,2) Not Null

Ans:  create table accountmaster(customerid number(5),accountnumber number(10,2),accounttype char(3),ledgerbalance number(10,2) not null,constraint acc_pk primary key(accountnumber));

Table created.

SQL> create sequence acc_number
  2  MINVALUE 1
  3  MAXVALUE 9999
  4  START WITH 1
  5  INCREMENT BY 1
  6  NOCACHE
  7  NOCYCLE;

Sequence created.

16. Relate AccountsMaster table and CustomerMaster table through Customerld column with
the constraint name Cust_acc.

Ans: alter table accountmaster add constraint cust_acc foreign key(customerid) references customermaster(customerid);

Table altered.

17. Insert the following rows to the CustomerMaster table:
1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

Ans:  insert into customermaster values(1000,'allen','#115 chicago','#115 chicago','M',25,7878776);

1 row created.

SQL> insert into customermaster values(1001,'george','#116 france','#116 france','M',25,434524);

1 row created.

SQL> insert into customermaster values(1002,'becker','#114 newyork','#114 newyork','M',45,431525);

1 row created.

SQL> select * from customermaster;

CUSTOMERID CUSTOMERNAME                   ADDRESS1
---------- ------------------------------ ------------------------------
ADDRESS2                       G        AGE    PHONENO
------------------------------ - ---------- ----------
      1000 allen                          #115 chicago
#115 chicago                   M         25    7878776

      1001 george                         #116 france
#116 france                    M         25     434524

      1002 becker                         #114 newyork
#114 newyork                   M         45     431525

18. Modify the AccountMaster table with the Check constraint to ensure AccountType should
be either NRI or IND.

Ans:  alter table accountmaster add constraint acc_type check(accounttype='NRI' or accounttype='IND');

Table altered.

19. Modify the AccountsMaster table keeping a Check constraint with the name
Balance_Check for the Minimum Balance which should be greater than 5000. 

Ans:  alter table accountmaster add constraint balancecheck check(ledgerbalance>5000);

Table altered.

20. Modify the AccountsMaster table such that if Customer is deleted from Customer table
then all his details should be deleted from AccountsMaster table. 

Ans:   alter table accountmaster drop constraint cust_acc;

Table altered.
   
alter table accountmaster add constraint cust_acc foreign key(customerid) references customermaster(customerid) on delete cascade;

Table altered.
   
desc accountmaster;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 ACCOUNTTYPE                                        CHAR(3)
 LEDGERBALANCE                             NOT NULL NUMBER(10,2)
  
 insert into accountmaster values(1001,Acc_number.nextval,'IND',10000000);

1 row created.

SQL> select * from accountmaster;

CUSTOMERID ACCOUNTNUMBER ACC LEDGERBALANCE
---------- ------------- --- -------------
      1001             1 IND      10000000

SQL> delete from customermaster where customerid=1001;

1 row deleted.

  select * from customermaster;

CUSTOMERID CUSTOMERNAME                   ADDRESS1
---------- ------------------------------ ------------------------------
ADDRESS2                       G        AGE    PHONENO
------------------------------ - ---------- ----------
      1000 allen                          #115 chicago
#115 chicago                   M         25    7878776

      1002 becker                         #114 newyork
#114 newyork                   M         45     431525


SQL> select * from accountmaster;

no rows selected

21. Create Backup copy for the AccountsMaster table with the name ‘AccountDetails’. 

Ans:   create table accountdetails as (select * from accountmaster);

Table created.

SQL> desc accountdetails;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 ACCOUNTNUMBER                                      NUMBER(10,2)
 ACCOUNTTYPE                                        CHAR(3)
 LEDGERBALANCE                             NOT NULL NUMBER(10,2)

22. Create a view ‘Acc_view’ with columns Customerld, CustomerName,
AccountNumber, AccountType, and LedgerBalance from AccountsMaster. In the
view Acc_view, the column names should be CustomerCode, AccountHolderName, AccountNumber, Type, and Balance for the respective
columns from AccountsMaster table. 

Ans:   create view acc_view as select a.customerid customercode,c.customername accountholdername,a.accountnumber accountnumber,a.accounttype type,a.ledgerbalance balance from accountmaster a,customermaster c where a.customerid=c.customerid;

View created.

SQL> desc acc_view;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERCODE                                       NUMBER(5)
 ACCOUNTHOLDERNAME                         NOT NULL VARCHAR2(30)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 TYPE                                               CHAR(3)
 BALANCE                                   NOT NULL NUMBER(10,2)

23. Create a view on AccountsMaster table with name vAccs_Dtls. This view should
list all customers whose AccountType is ‘IND’ and their balance amount should
not be less than 10000. Using this view any DML operation should not violate the
view conditions. 

Ans:    create view vaccs_dtls as select a.customerid customercode,c.customername accountholdername,a.accountnumber accountnumber,a.accounttype type,a.ledgerbalance balance from accountmaster a,customermaster c where a.customerid=c.customerid and a.accounttype='IND' and ledgerbalance>=10000 with check option;

View created.

SQL> desc vaccs_dtls;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERCODE                                       NUMBER(5)
 ACCOUNTHOLDERNAME                         NOT NULL VARCHAR2(30)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 TYPE                                               CHAR(3)
 BALANCE                                   NOT NULL NUMBER(10,2)

24. Create a view accsvw10 which will not allow DML statement against it.

Ans:   create view accsvw as select a.customerid customercode,c.customername accountholdername,a.accountnumber accountnumber,a.accounttype type,a.ledgerbalance balance from accountmaster a,customermaster c where a.customerid=c.customerid with read only;

View created.

SQL> desc accsvw;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERCODE                                       NUMBER(5)
 ACCOUNTHOLDERNAME                         NOT NULL VARCHAR2(30)
 ACCOUNTNUMBER                             NOT NULL NUMBER(10,2)
 TYPE                                               CHAR(3)
 BALANCE                                   NOT NULL NUMBER(10,2)

25. Create a Sequence with the name Seq_Dept on Deptno column of
Department_Masters table. It should start from 40 and stop at 200. Increment
parameter for the sequence Seq_Dept should be in step of 10.

Ans:   create sequence seq_dept
  2  MINVALUE 40
  3  MAXVALUE 200
  4  NOCACHE
  5  NOCYCLE;

Sequence created.

26. Insert three sample rows by using the above sequence in Department_Masters
table.

Ans:  create sequence seq_dept
  2  MINVALUE 70
  3  MAXVALUE 200
  4  NOCACHE
  5  NOCYCLE;

Sequence created.

SQL> insert into department_master values(seq_dept.NEXTVAL,'TR');

1 row created.

SQL> insert into department_master values(seq_dept.NEXTVAL,'development');
insert into department_master values(seq_dept.NEXTVAL,'development')
                                                      *
ERROR at line 1:
ORA-12899: value too large for column
"SRINIVASS"."DEPARTMENT_MASTER"."DEPT_NAME" (actual: 11, maximum: 10)


SQL> insert into department_master values(seq_dept.NEXTVAL,'develop');

1 row created.

SQL> insert into department_master values(seq_dept.NEXTVAL,'security');

1 row created.

SQL> commit;

Commit complete.

SQL> select * from department_master;

 DEPT_CODE DEPT_NAME
---------- ----------
        10 CSE
        20 ECE
        30 MECH
        40 EEE
        50 H&S
        60 R&D
        70 TR
        72 develop
        73 security

27. Drop the Seq_Dept sequence. 

Ans:  drop sequence seq_dept;

Sequence dropped.

28. Get information on the index No_Name from the Data Dictionary. 

Ans:   create index no_name on department_master(dept_name);

Index created.

    select * from department_master where dept_name='TR';

 DEPT_CODE DEPT_NAME
---------- ----------
        70 TR

29. Create synonym synEmp for the EMP table. 

Ans:  create synonym synemp for emp;

Synonym created.

30. Get Information on synonym synEmp from the Data Dictionary. 

Ans:  select * from synemp;

     EMPNO EMPNAME              JOB                         MGR HIREDATE
---------- -------------------- -------------------- ---------- ---------
    SALARY       COMM  DEPT_CODE
---------- ---------- ----------
        10 john                 manager                       2 12-JAN-00
     20000        500         10

        20 mike                 sales                         3 12-DEC-01
     15000        500         20

        30 albert               HR                            1 22-FEB-02
     25000        500         20


     EMPNO EMPNAME              JOB                         MGR HIREDATE
---------- -------------------- -------------------- ---------- ---------
    SALARY       COMM  DEPT_CODE
---------- ---------- ----------
        40 robert               marketing                     1 22-MAR-03
     35000        400         30

        50 rock                 training                      3 22-JAN-04
     25000        400         40

        60 richard              sales                           28-JAN-05
     28000        400         50

31. Note: Perform this after creating the Employee Table mentioned in the next Lab
assignment. Create Index on HireDate column and give the name as
idx_emp_hiredate for this object. 

Ans:   create index idx_emp_hiredate on employee(hiredate);

Index created.

32. Create a Sequence with the name Seq_Emp on Empno column of Employee
table. It should start from 1001. Try to set Minimum value for this sequence which
is less than / greater than 1001, use the sequence to generate Empno while
inserting records in Employee table and check the values generated.

Ans:   create sequence seq_emp
  2  MINVALUE 1001
  3  MAXVALUE 1100
  4  NOCACHE
  5  NOCYCLE;

Sequence created.
    insert into employee values(seq_emp.nextval,'chaitanya','dev',2,'14-mar-2006',45000,500,10);

1 row created.

SQL> select * from employee;

     EMPNO EMPNAME              JOB                         MGR HIREDATE
---------- -------------------- -------------------- ---------- ---------
    SALARY       COMM  DEPT_CODE
---------- ---------- ----------
        10 john                 manager                       2 12-JAN-00
     20000        500         10

        20 mike                 manager                       3 12-DEC-01
     15000        500         10

        30 albert               HR                            1 22-FEB-02
     25000        500         20


     EMPNO EMPNAME              JOB                         MGR HIREDATE
---------- -------------------- -------------------- ---------- ---------
    SALARY       COMM  DEPT_CODE
---------- ---------- ----------
        40 robert               marketing                     1 22-MAR-03
     35000        400         30

        50 rock                 training                      3 22-JAN-04
     25000        400         40

        60 richard              sales                           28-JAN-05
     28000        400         50


     EMPNO EMPNAME              JOB                         MGR HIREDATE
---------- -------------------- -------------------- ---------- ---------
    SALARY       COMM  DEPT_CODE
---------- ---------- ----------
      1000 Allen                Clerk                      1001 12-JAN-01
      3000          2         10

      1001 George               analyst                         08-SEP-92
      5000          0         10

      1002 Becker               Manager                    1000 04-NOV-92
      2800          4         20
    
    EMPNO EMPNAME              JOB                         MGR HIREDATE
---------- -------------------- -------------------- ---------- ---------
    SALARY       COMM  DEPT_CODE
---------- ---------- ----------
      1003 Bill                 Clerk                      1002 04-NOV-92
      3000          0         20

      1001 chaitanya            dev                           2 14-MAR-06
     45000        500         10


11 rows selected.
